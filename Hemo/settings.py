"""
Django settings for Hemo project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3=_m(g*3_5k1(0sms0s76izba_ikg^e7q1v(*f&2n=mnh6j+n('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = ['http://localhost:8000/#','localhost','.localhost','http://127.0.0.1:8000/','127.0.0.1','.cims-8a3d5cead720.herokuapp.com','cims-8a3d5cead720.herokuapp.com','https://cims-8a3d5cead720.herokuapp.com/']

STATIC_URL = '/static/'  # URL prefix for static files
STATICFILES_DIRS = [
    BASE_DIR / "hemo-front/build/static",  # This must point to build/static
]
STATIC_ROOT = BASE_DIR / "staticfiles"  # Where collectstatic will copy files



# Application definition
CORS_ALLOWED_ORIGIN_REGEXES = [
    r"^http://[a-zA-Z0-9-]+\.localhost:3000$",  # center1.localhost:3000 etc.
    r"^http://localhost:3000$", 
    r"^http://[a-zA-Z0-9-]+\.localhost:8000$",  # center1.localhost:3000 etc.
    r"^http://localhost:8000$",                  # plain localhost
     r"^https?://[a-zA-Z0-9-]+\.cims-8a3d5cead720\.herokuapp\.com$",  # e.g., center1.cims-8a3d5cead720.herokuapp.com
    r"^https?://cims-8a3d5cead720\.herokuapp\.com$",  
    r"^http://[a-zA-Z0-9-]+\.127.0.0.1:8000$",  # center1.localhost:3000 etc.
    r"^http://127.0.0.1:8000$",  
]

CORS_ALLOW_CREDENTIALS = True

INSTALLED_APPS = [
    'rest_framework',
    'corsheaders',
    'rest_framework_simplejwt',
    'Hemo',
    'centers',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'centers.middleware.TenantMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Hemo.urls'
import os
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR,'hemo-front/build')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Hemo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'Hemo',
        'USER': 'Jolda',
        'PASSWORD': os.environ.get('DB_PASS'),
        'HOST': 'hemo.cdcmgy488t8v.eu-north-1.rds.amazonaws.com',
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
}

from datetime import timedelta


def custom_jwt_payload_handler(user):
    from rest_framework_simplejwt.utils import jwt_payload_handler
    payload = jwt_payload_handler(user)
    payload['is_superuser'] = user.is_superuser
    payload['username'] = user.username
    return payload

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'AUTH_HEADER_TYPES': ('Bearer',),
    'USER_ID_CLAIM': 'user_id',
    'USER_ID_FIELD': 'id',
    'TOKEN_USER_CLASS': 'django.contrib.auth.models.User',
    'JWT_PAYLOAD_HANDLER': custom_jwt_payload_handler,
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
}
# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '[{asctime}] {levelname} {name} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        # Optional file handler, mainly for local dev
        'file': {
            'class': 'logging.FileHandler',
            'filename': 'debug.log',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        # Your app-specific loggers
        'centers.permissions': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'centers.views': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': False,
        },
        # Catch all other logs from Django and 3rd party
        'django': {
            'handlers': ['console'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'ERROR',
    },
}


EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
DEFAULT_FROM_EMAIL = 'no-reply@hemo.localhost'